import React, { useState, useRef, useContext } from "react";
import { useHistory } from "react-router-dom";
import { useForm } from "react-hook-form";
import axios from "axios";
import AxiosWithAuth from "../../../../Utils/AxiosWithAuth";
import { AppContext } from "../../../../context/context";


// styled-components
import {
  Container,
  HeadingContainer,
  Heading,
  BackBtn,
} from "../Articles.styles";

import {
  AlignImage,
  FormContainer,
  Form,
  FileBtn,
  TwoRows,
  Rows,
  InputWrapper,
  InputField,
  TextareaField,
  Select,
  Label,
  ErrorMsg,
  UploadContainer,
  FileContainer,
  AddBtn,
  UploadedImage
} from "./CreateArticle.styles";

import InsertImage from "../../../../Assets/Articles/InsertImage.svg";


const CreateArticle = () => {
  const history = useHistory();
  const { handleSubmit, register, errors, reset } = useForm();
  const  { articles, addArticles } = useContext(AppContext);
  // const [articles, addArticles] = useState(
  //   {
  //     title: "",
  //     description: "",
  //     imgUrl: ""
  //   }
  // );
  console.log(articles);
  const [file, setFile] = useState();

  // hardcode for now
  const years = [];

  const date = new Date();

  for (let i = date.getFullYear(); i >= 1990; i--) {
    years.push(i);
  }

  const goBack = () => {
    history.push("/reports");
  };

  const loadFile = (e) => {
      e.preventDefault();
      let image = document.getElementById('output');
      image.src = URL.createObjectURL(e.target.files[0]);
  }

  const onSubmit = (values, e) => {
    e.preventDefault();
    const data = new FormData();
    data.append("file", file);
    data.append("upload_preset", `${process.env.REACT_APP_PRESET}`);
    data.append("folder", "photos"); // folder name

    // send to cloudinary
    // axios
    //   .post(process.env.REACT_APP_URL, data)
    //   .then((res) => {
    //     // mutate original values
    //     console.log(res.data)
    //     const newValues = { ...values, file: res.data.url };
    //     console.log("VALUES -> ", newValues);
    //     reset();
    //   })
    //   .catch((err) => {
    //     console.log(`This is the error: ${err}`);
    //     reset();
    //   });

  console.log("data from create article", articles)
  AxiosWithAuth
  .post("/articles/article", articles)
  .then((res) => {
    // mutate original values
    console.log("result", res)
    // const newValues = { ...values, file: res.data.url };
    // console.log("VALUES -> ", newValues);
    // reset();
  })
  .catch((err) => {
    console.log(`This is the error: ${err}`);
    // reset();
  });
};

const onChange = (e) => {
  console.log(e.target.value)
  addArticles({ ...articles, [e.target.name]: e.target.value })
  // addArticles(
  //   {
  //     title: articles.title,
  //     description: e.target.description,
  //     imgUrl: e.target.imgUrl
  //   })
    console.log("this", articles)
}

  const handleChange = (e) => {
    const { files } = e.target;
    const filesList = [];
    Array.from(files).forEach((file) => {
      filesList.push(file);
    });
    setFile(filesList[0]);
  };

  // uploader
  const uploader = useRef();

  return (
    <Container>
      <HeadingContainer>
        <Heading>Add New Article</Heading>
        <BackBtn onClick={goBack}>Back</BackBtn>
      </HeadingContainer>

      <FormContainer>
        <Form onSubmit={handleSubmit(onSubmit)}>
        <AlignImage>
          {/* image */}
          <div>
            <UploadedImage id="output" src={InsertImage} />
            <FileBtn>
                <p style={{position: "absolute", paddingTop: "5px", paddingLeft: "12px"}}>Choose File</p>
                <input 
                type="file" 
                accept="image/" 
                name="imgUrl" 
                value={articles.imgUrl}
                style={{paddingTop: "5px", paddingLeft: "15px", opacity: "0"}} 
                onChange={onChange}
                ref={(ref) => {
                  uploader.current = ref;
                  register({ required: true });
                }}></input>
            </FileBtn>
          </div>
          <TwoRows>
            {/* title  */}
            <InputWrapper full>
              <Label htmlFor="title">Enter Title</Label>
              <InputField
                type="text"
                id="title"
                value={articles.title}
                name="title"
                ref={register({ required: true })}
                onChange={onChange}
              />
              {errors.title && <ErrorMsg>Please enter a title</ErrorMsg>}
            </InputWrapper>
            {/* category */}
            {/* <InputWrapper category>
              <Label htmlFor="category">Category</Label>
              <Select
                name="category"
                id="category"
                value={articles.category}
                ref={register({ required: true })}
              >
                <option value="" disabled selected>
                  -select-{" "}
                </option>
                <option value="annual"> Annual </option>
                <option value="financial"> Financial </option>
                <option value="other"> Other </option>
              </Select>

              {errors.category && <ErrorMsg>Please select one</ErrorMsg>}
            </InputWrapper> */}
          </TwoRows>
          </AlignImage>
          
 
          {/* description */}
          <Rows>
            <InputWrapper full>
              <Label htmlFor="description">Enter Description</Label>
              <TextareaField
                type="textarea"
                id="description"
                name="description"
                value={articles.description}
                rows="4"
                cols="4"
                ref={register({ required: true })}
                onChange={onChange}
              ></TextareaField>
              {errors.title && <ErrorMsg>Please enter a description</ErrorMsg>}
            </InputWrapper>
          </Rows>

          {/* file upload */}
          <Rows>
            {/* <InputWrapper full>
              <Label htmlFor="file">Upload Document</Label>
              <InputField
                style={{ display: "none" }}
                type="file"
                id="file"
                name="file"
                accept=".pdf"
                value={articles.articleUrl}
                onChange={handleChange}
                ref={(ref) => {
                  uploader.current = ref;
                  register({ required: true });
                }}
              />

              <UploadContainer
                onClick={() => uploader.current.click()}
                file={file ? true : false}
              >
                {file ? (
                  <FileContainer> {file.name} </FileContainer>
                ) : (
                  <svg
                    width="416"
                    height="68"
                    viewBox="0 0 416 68"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M53.9974 13.9453L39.9753 0.929688C39.3307 0.332031 38.457 0 37.5404 0H36.6667V17H55V16.1898C55 15.3531 54.6419 14.543 53.9974 13.9453ZM32.0833 18.0625V0H3.4375C1.53255 0 0 1.42109 0 3.1875V64.8125C0 66.5789 1.53255 68 3.4375 68H51.5625C53.4674 68 55 66.5789 55 64.8125V21.25H35.5208C33.6302 21.25 32.0833 19.8156 32.0833 18.0625ZM41.25 39.3125V45.6875C41.25 46.2719 40.7344 46.75 40.1042 46.75H32.0833V54.1875C32.0833 54.7719 31.5677 55.25 30.9375 55.25H24.0625C23.4323 55.25 22.9167 54.7719 22.9167 54.1875V46.75H14.8958C14.2656 46.75 13.75 46.2719 13.75 45.6875V39.3125C13.75 38.7281 14.2656 38.25 14.8958 38.25H22.9167V30.8125C22.9167 30.2281 23.4323 29.75 24.0625 29.75H30.9375C31.5677 29.75 32.0833 30.2281 32.0833 30.8125V38.25H40.1042C40.7344 38.25 41.25 38.7281 41.25 39.3125Z"
                      fill="#808080"
                    />
                    <path
                      d="M103.992 29.9375V41.5391C103.984 43.1484 103.477 44.4648 102.469 45.4883C101.469 46.5117 100.109 47.0859 98.3906 47.2109L97.793 47.2344C95.9258 47.2344 94.4375 46.7305 93.3281 45.7227C92.2188 44.7148 91.6562 43.3281 91.6406 41.5625V29.9375H93.8672V41.4922C93.8672 42.7266 94.207 43.6875 94.8867 44.375C95.5664 45.0547 96.5352 45.3945 97.793 45.3945C99.0664 45.3945 100.039 45.0547 100.711 44.375C101.391 43.6953 101.73 42.7383 101.73 41.5039V29.9375H103.992ZM117.914 40.8008C117.914 42.7305 117.473 44.2852 116.59 45.4648C115.707 46.6445 114.512 47.2344 113.004 47.2344C111.465 47.2344 110.254 46.7461 109.371 45.7695V51.875H107.203V34.3203H109.184L109.289 35.7266C110.172 34.6328 111.398 34.0859 112.969 34.0859C114.492 34.0859 115.695 34.6602 116.578 35.8086C117.469 36.957 117.914 38.5547 117.914 40.6016V40.8008ZM115.746 40.5547C115.746 39.125 115.441 37.9961 114.832 37.168C114.223 36.3398 113.387 35.9258 112.324 35.9258C111.012 35.9258 110.027 36.5078 109.371 37.6719V43.7305C110.02 44.8867 111.012 45.4648 112.348 45.4648C113.387 45.4648 114.211 45.0547 114.82 44.2344C115.438 43.4062 115.746 42.1797 115.746 40.5547ZM123.035 47H120.867V29H123.035V47ZM125.941 40.543C125.941 39.3008 126.184 38.1836 126.668 37.1914C127.16 36.1992 127.84 35.4336 128.707 34.8945C129.582 34.3555 130.578 34.0859 131.695 34.0859C133.422 34.0859 134.816 34.6836 135.879 35.8789C136.949 37.0742 137.484 38.6641 137.484 40.6484V40.8008C137.484 42.0352 137.246 43.1445 136.77 44.1289C136.301 45.1055 135.625 45.8672 134.742 46.4141C133.867 46.9609 132.859 47.2344 131.719 47.2344C130 47.2344 128.605 46.6367 127.535 45.4414C126.473 44.2461 125.941 42.6641 125.941 40.6953V40.543ZM128.121 40.8008C128.121 42.207 128.445 43.3359 129.094 44.1875C129.75 45.0391 130.625 45.4648 131.719 45.4648C132.82 45.4648 133.695 45.0352 134.344 44.1758C134.992 43.3086 135.316 42.0977 135.316 40.543C135.316 39.1523 134.984 38.0273 134.32 37.168C133.664 36.3008 132.789 35.8672 131.695 35.8672C130.625 35.8672 129.762 36.293 129.105 37.1445C128.449 37.9961 128.121 39.2148 128.121 40.8008ZM148.031 47C147.906 46.75 147.805 46.3047 147.727 45.6641C146.719 46.7109 145.516 47.2344 144.117 47.2344C142.867 47.2344 141.84 46.8828 141.035 46.1797C140.238 45.4688 139.84 44.5703 139.84 43.4844C139.84 42.1641 140.34 41.1406 141.34 40.4141C142.348 39.6797 143.762 39.3125 145.582 39.3125H147.691V38.3164C147.691 37.5586 147.465 36.957 147.012 36.5117C146.559 36.0586 145.891 35.832 145.008 35.832C144.234 35.832 143.586 36.0273 143.062 36.418C142.539 36.8086 142.277 37.2812 142.277 37.8359H140.098C140.098 37.2031 140.32 36.5938 140.766 36.0078C141.219 35.4141 141.828 34.9453 142.594 34.6016C143.367 34.2578 144.215 34.0859 145.137 34.0859C146.598 34.0859 147.742 34.4531 148.57 35.1875C149.398 35.9141 149.828 36.918 149.859 38.1992V44.0352C149.859 45.1992 150.008 46.125 150.305 46.8125V47H148.031ZM144.434 45.3477C145.113 45.3477 145.758 45.1719 146.367 44.8203C146.977 44.4688 147.418 44.0117 147.691 43.4492V40.8477H145.992C143.336 40.8477 142.008 41.625 142.008 43.1797C142.008 43.8594 142.234 44.3906 142.688 44.7734C143.141 45.1562 143.723 45.3477 144.434 45.3477ZM152.73 40.5547C152.73 38.6094 153.191 37.0469 154.113 35.8672C155.035 34.6797 156.242 34.0859 157.734 34.0859C159.219 34.0859 160.395 34.5938 161.262 35.6094V29H163.43V47H161.438L161.332 45.6406C160.465 46.7031 159.258 47.2344 157.711 47.2344C156.242 47.2344 155.043 46.6328 154.113 45.4297C153.191 44.2266 152.73 42.6562 152.73 40.7188V40.5547ZM154.898 40.8008C154.898 42.2383 155.195 43.3633 155.789 44.1758C156.383 44.9883 157.203 45.3945 158.25 45.3945C159.625 45.3945 160.629 44.7773 161.262 43.543V37.7188C160.613 36.5234 159.617 35.9258 158.273 35.9258C157.211 35.9258 156.383 36.3359 155.789 37.1562C155.195 37.9766 154.898 39.1914 154.898 40.8008ZM180.586 47C180.461 46.75 180.359 46.3047 180.281 45.6641C179.273 46.7109 178.07 47.2344 176.672 47.2344C175.422 47.2344 174.395 46.8828 173.59 46.1797C172.793 45.4688 172.395 44.5703 172.395 43.4844C172.395 42.1641 172.895 41.1406 173.895 40.4141C174.902 39.6797 176.316 39.3125 178.137 39.3125H180.246V38.3164C180.246 37.5586 180.02 36.957 179.566 36.5117C179.113 36.0586 178.445 35.832 177.562 35.832C176.789 35.832 176.141 36.0273 175.617 36.418C175.094 36.8086 174.832 37.2812 174.832 37.8359H172.652C172.652 37.2031 172.875 36.5938 173.32 36.0078C173.773 35.4141 174.383 34.9453 175.148 34.6016C175.922 34.2578 176.77 34.0859 177.691 34.0859C179.152 34.0859 180.297 34.4531 181.125 35.1875C181.953 35.9141 182.383 36.918 182.414 38.1992V44.0352C182.414 45.1992 182.562 46.125 182.859 46.8125V47H180.586ZM176.988 45.3477C177.668 45.3477 178.312 45.1719 178.922 44.8203C179.531 44.4688 179.973 44.0117 180.246 43.4492V40.8477H178.547C175.891 40.8477 174.562 41.625 174.562 43.1797C174.562 43.8594 174.789 44.3906 175.242 44.7734C175.695 45.1562 176.277 45.3477 176.988 45.3477ZM202.477 40.8008C202.477 42.7305 202.035 44.2852 201.152 45.4648C200.27 46.6445 199.074 47.2344 197.566 47.2344C196.027 47.2344 194.816 46.7461 193.934 45.7695V51.875H191.766V34.3203H193.746L193.852 35.7266C194.734 34.6328 195.961 34.0859 197.531 34.0859C199.055 34.0859 200.258 34.6602 201.141 35.8086C202.031 36.957 202.477 38.5547 202.477 40.6016V40.8008ZM200.309 40.5547C200.309 39.125 200.004 37.9961 199.395 37.168C198.785 36.3398 197.949 35.9258 196.887 35.9258C195.574 35.9258 194.59 36.5078 193.934 37.6719V43.7305C194.582 44.8867 195.574 45.4648 196.91 45.4648C197.949 45.4648 198.773 45.0547 199.383 44.2344C200 43.4062 200.309 42.1797 200.309 40.5547ZM204.715 40.5547C204.715 38.6094 205.176 37.0469 206.098 35.8672C207.02 34.6797 208.227 34.0859 209.719 34.0859C211.203 34.0859 212.379 34.5938 213.246 35.6094V29H215.414V47H213.422L213.316 45.6406C212.449 46.7031 211.242 47.2344 209.695 47.2344C208.227 47.2344 207.027 46.6328 206.098 45.4297C205.176 44.2266 204.715 42.6562 204.715 40.7188V40.5547ZM206.883 40.8008C206.883 42.2383 207.18 43.3633 207.773 44.1758C208.367 44.9883 209.188 45.3945 210.234 45.3945C211.609 45.3945 212.613 44.7773 213.246 43.543V37.7188C212.598 36.5234 211.602 35.9258 210.258 35.9258C209.195 35.9258 208.367 36.3359 207.773 37.1562C207.18 37.9766 206.883 39.1914 206.883 40.8008ZM219.855 47V35.9961H217.852V34.3203H219.855V33.0195C219.855 31.6602 220.219 30.6094 220.945 29.8672C221.672 29.125 222.699 28.7539 224.027 28.7539C224.527 28.7539 225.023 28.8203 225.516 28.9531L225.398 30.7109C225.031 30.6406 224.641 30.6055 224.227 30.6055C223.523 30.6055 222.98 30.8125 222.598 31.2266C222.215 31.6328 222.023 32.2188 222.023 32.9844V34.3203H224.73V35.9961H222.023V47H219.855ZM232.559 40.5547C232.559 38.6094 233.02 37.0469 233.941 35.8672C234.863 34.6797 236.07 34.0859 237.562 34.0859C239.047 34.0859 240.223 34.5938 241.09 35.6094V29H243.258V47H241.266L241.16 45.6406C240.293 46.7031 239.086 47.2344 237.539 47.2344C236.07 47.2344 234.871 46.6328 233.941 45.4297C233.02 44.2266 232.559 42.6562 232.559 40.7188V40.5547ZM234.727 40.8008C234.727 42.2383 235.023 43.3633 235.617 44.1758C236.211 44.9883 237.031 45.3945 238.078 45.3945C239.453 45.3945 240.457 44.7773 241.09 43.543V37.7188C240.441 36.5234 239.445 35.9258 238.102 35.9258C237.039 35.9258 236.211 36.3359 235.617 37.1562C235.023 37.9766 234.727 39.1914 234.727 40.8008ZM246.059 40.543C246.059 39.3008 246.301 38.1836 246.785 37.1914C247.277 36.1992 247.957 35.4336 248.824 34.8945C249.699 34.3555 250.695 34.0859 251.812 34.0859C253.539 34.0859 254.934 34.6836 255.996 35.8789C257.066 37.0742 257.602 38.6641 257.602 40.6484V40.8008C257.602 42.0352 257.363 43.1445 256.887 44.1289C256.418 45.1055 255.742 45.8672 254.859 46.4141C253.984 46.9609 252.977 47.2344 251.836 47.2344C250.117 47.2344 248.723 46.6367 247.652 45.4414C246.59 44.2461 246.059 42.6641 246.059 40.6953V40.543ZM248.238 40.8008C248.238 42.207 248.562 43.3359 249.211 44.1875C249.867 45.0391 250.742 45.4648 251.836 45.4648C252.938 45.4648 253.812 45.0352 254.461 44.1758C255.109 43.3086 255.434 42.0977 255.434 40.543C255.434 39.1523 255.102 38.0273 254.438 37.168C253.781 36.3008 252.906 35.8672 251.812 35.8672C250.742 35.8672 249.879 36.293 249.223 37.1445C248.566 37.9961 248.238 39.2148 248.238 40.8008ZM265.406 45.4648C266.18 45.4648 266.855 45.2305 267.434 44.7617C268.012 44.293 268.332 43.707 268.395 43.0039H270.445C270.406 43.7305 270.156 44.4219 269.695 45.0781C269.234 45.7344 268.617 46.2578 267.844 46.6484C267.078 47.0391 266.266 47.2344 265.406 47.2344C263.68 47.2344 262.305 46.6602 261.281 45.5117C260.266 44.3555 259.758 42.7773 259.758 40.7773V40.4141C259.758 39.1797 259.984 38.082 260.438 37.1211C260.891 36.1602 261.539 35.4141 262.383 34.8828C263.234 34.3516 264.238 34.0859 265.395 34.0859C266.816 34.0859 267.996 34.5117 268.934 35.3633C269.879 36.2148 270.383 37.3203 270.445 38.6797H268.395C268.332 37.8594 268.02 37.1875 267.457 36.6641C266.902 36.1328 266.215 35.8672 265.395 35.8672C264.293 35.8672 263.438 36.2656 262.828 37.0625C262.227 37.8516 261.926 38.9961 261.926 40.4961V40.9062C261.926 42.3672 262.227 43.4922 262.828 44.2812C263.43 45.0703 264.289 45.4648 265.406 45.4648ZM280.711 45.7461C279.867 46.7383 278.629 47.2344 276.996 47.2344C275.645 47.2344 274.613 46.8438 273.902 46.0625C273.199 45.2734 272.844 44.1094 272.836 42.5703V34.3203H275.004V42.5117C275.004 44.4336 275.785 45.3945 277.348 45.3945C279.004 45.3945 280.105 44.7773 280.652 43.543V34.3203H282.82V47H280.758L280.711 45.7461ZM288.164 34.3203L288.223 35.7266C289.152 34.6328 290.406 34.0859 291.984 34.0859C293.758 34.0859 294.965 34.7656 295.605 36.125C296.027 35.5156 296.574 35.0234 297.246 34.6484C297.926 34.2734 298.727 34.0859 299.648 34.0859C302.43 34.0859 303.844 35.5586 303.891 38.5039V47H301.723V38.6328C301.723 37.7266 301.516 37.0508 301.102 36.6055C300.688 36.1523 299.992 35.9258 299.016 35.9258C298.211 35.9258 297.543 36.168 297.012 36.6523C296.48 37.1289 296.172 37.7734 296.086 38.5859V47H293.906V38.6914C293.906 36.8477 293.004 35.9258 291.199 35.9258C289.777 35.9258 288.805 36.5312 288.281 37.7422V47H286.113V34.3203H288.164ZM312.434 47.2344C310.715 47.2344 309.316 46.6719 308.238 45.5469C307.16 44.4141 306.621 42.9023 306.621 41.0117V40.6133C306.621 39.3555 306.859 38.2344 307.336 37.25C307.82 36.2578 308.492 35.4844 309.352 34.9297C310.219 34.3672 311.156 34.0859 312.164 34.0859C313.812 34.0859 315.094 34.6289 316.008 35.7148C316.922 36.8008 317.379 38.3555 317.379 40.3789V41.2812H308.789C308.82 42.5312 309.184 43.543 309.879 44.3164C310.582 45.082 311.473 45.4648 312.551 45.4648C313.316 45.4648 313.965 45.3086 314.496 44.9961C315.027 44.6836 315.492 44.2695 315.891 43.7539L317.215 44.7852C316.152 46.418 314.559 47.2344 312.434 47.2344ZM312.164 35.8672C311.289 35.8672 310.555 36.1875 309.961 36.8281C309.367 37.4609 309 38.3516 308.859 39.5H315.211V39.3359C315.148 38.2344 314.852 37.3828 314.32 36.7812C313.789 36.1719 313.07 35.8672 312.164 35.8672ZM321.949 34.3203L322.02 35.9141C322.988 34.6953 324.254 34.0859 325.816 34.0859C328.496 34.0859 329.848 35.5977 329.871 38.6211V47H327.703V38.6094C327.695 37.6953 327.484 37.0195 327.07 36.582C326.664 36.1445 326.027 35.9258 325.16 35.9258C324.457 35.9258 323.84 36.1133 323.309 36.4883C322.777 36.8633 322.363 37.3555 322.066 37.9648V47H319.898V34.3203H321.949ZM336.082 31.25V34.3203H338.449V35.9961H336.082V43.8594C336.082 44.3672 336.188 44.75 336.398 45.0078C336.609 45.2578 336.969 45.3828 337.477 45.3828C337.727 45.3828 338.07 45.3359 338.508 45.2422V47C337.938 47.1562 337.383 47.2344 336.844 47.2344C335.875 47.2344 335.145 46.9414 334.652 46.3555C334.16 45.7695 333.914 44.9375 333.914 43.8594V35.9961H331.605V34.3203H333.914V31.25H336.082ZM349.113 35.8555C350.074 34.6758 351.324 34.0859 352.863 34.0859C355.543 34.0859 356.895 35.5977 356.918 38.6211V47H354.75V38.6094C354.742 37.6953 354.531 37.0195 354.117 36.582C353.711 36.1445 353.074 35.9258 352.207 35.9258C351.504 35.9258 350.887 36.1133 350.355 36.4883C349.824 36.8633 349.41 37.3555 349.113 37.9648V47H346.945V29H349.113V35.8555ZM365.426 47.2344C363.707 47.2344 362.309 46.6719 361.23 45.5469C360.152 44.4141 359.613 42.9023 359.613 41.0117V40.6133C359.613 39.3555 359.852 38.2344 360.328 37.25C360.812 36.2578 361.484 35.4844 362.344 34.9297C363.211 34.3672 364.148 34.0859 365.156 34.0859C366.805 34.0859 368.086 34.6289 369 35.7148C369.914 36.8008 370.371 38.3555 370.371 40.3789V41.2812H361.781C361.812 42.5312 362.176 43.543 362.871 44.3164C363.574 45.082 364.465 45.4648 365.543 45.4648C366.309 45.4648 366.957 45.3086 367.488 44.9961C368.02 44.6836 368.484 44.2695 368.883 43.7539L370.207 44.7852C369.145 46.418 367.551 47.2344 365.426 47.2344ZM365.156 35.8672C364.281 35.8672 363.547 36.1875 362.953 36.8281C362.359 37.4609 361.992 38.3516 361.852 39.5H368.203V39.3359C368.141 38.2344 367.844 37.3828 367.312 36.7812C366.781 36.1719 366.062 35.8672 365.156 35.8672ZM379.02 36.2656C378.691 36.2109 378.336 36.1836 377.953 36.1836C376.531 36.1836 375.566 36.7891 375.059 38V47H372.891V34.3203H375L375.035 35.7852C375.746 34.6523 376.754 34.0859 378.059 34.0859C378.48 34.0859 378.801 34.1406 379.02 34.25V36.2656ZM386.051 47.2344C384.332 47.2344 382.934 46.6719 381.855 45.5469C380.777 44.4141 380.238 42.9023 380.238 41.0117V40.6133C380.238 39.3555 380.477 38.2344 380.953 37.25C381.438 36.2578 382.109 35.4844 382.969 34.9297C383.836 34.3672 384.773 34.0859 385.781 34.0859C387.43 34.0859 388.711 34.6289 389.625 35.7148C390.539 36.8008 390.996 38.3555 390.996 40.3789V41.2812H382.406C382.438 42.5312 382.801 43.543 383.496 44.3164C384.199 45.082 385.09 45.4648 386.168 45.4648C386.934 45.4648 387.582 45.3086 388.113 44.9961C388.645 44.6836 389.109 44.2695 389.508 43.7539L390.832 44.7852C389.77 46.418 388.176 47.2344 386.051 47.2344ZM385.781 35.8672C384.906 35.8672 384.172 36.1875 383.578 36.8281C382.984 37.4609 382.617 38.3516 382.477 39.5H388.828V39.3359C388.766 38.2344 388.469 37.3828 387.938 36.7812C387.406 36.1719 386.688 35.8672 385.781 35.8672Z"
                      fill="#54474F"
                    />
                  </svg>
                )}
              </UploadContainer>

              {errors.title && <ErrorMsg>Please upload your document</ErrorMsg>}
            </InputWrapper> */}
          </Rows>

          <AddBtn type="submit">Add</AddBtn>
        </Form>
      </FormContainer>
    </Container>
  );
};


export default CreateArticle;